# charts - each key is a helm chart install
charts:

  # cert-manager for issuing certs
  cert-manager:
    repo: https://charts.jetstack.io
    revision: v1.9.1
    chart: cert-manager
    namespace: cert-manager
    values:
      installCRDs: true

  # a cert-manager clusterIssuer named "selfsigned"
  selfsigned:
    path: charts/cluster-issuer
    namespace: kube-system
    syncPolicy:
      syncOptions: [] # dont create namespace

  aws-load-balancer-controller:
    repo: https://aws.github.io/eks-charts
    chart: aws-load-balancer-controller
    revision: "1.4.5"
    namespace: kube-system
    syncPolicy:
      syncOptions: [] # dont create namespace
    values:
      clusterName: ben
      replicaCount: 1
      serviceAccount:
        create: false
        name: aws-load-balancer-controller
  
  gloo-mesh-enterprise:
    repo: https://storage.googleapis.com/gloo-mesh-enterprise/gloo-mesh-enterprise
    chart: gloo-mesh-enterprise
    revision: v2.1.0-rc3
    namespace: gloo-mesh

  istio-base:
    repo: https://istio-release.storage.googleapis.com/charts
    chart: base
    namespace: istio-system
    revision: "1.15.0"

  istiod:
    repo: https://istio-release.storage.googleapis.com/charts
    chart: istiod
    revision: "1.15.0"
    namespace: istio-system
    syncPolicy:
      syncOptions: [] # dont create namespace
    values:
      pilot:
        hub: us-docker.pkg.dev/gloo-mesh/istio-1cf99a48c9d8
        tag: "1.15.0-solo"
        env:
          PILOT_SKIP_VALIDATE_TRUST_DOMAIN: "true"
          AUTO_RELOAD_PLUGIN_CERTS: "true"
      meshConfig:
        trustDomain: mgmt
        accessLogFile: /dev/stdout
        defaultConfig:
          holdApplicationUntilProxyStarts: true
          proxyMetadata:
            ISTIO_META_DNS_CAPTURE: "true"
            ISTIO_META_DNS_AUTO_ALLOCATE: "true"


  # # the aws iam for service accounts webhook for non-eks
  # aws-iam:
  #   path: charts/aws-identity-webhook
  #   namespace: pod-identity-webhook
    
  # # # bookinfo sample apps
  # # bookinfo:
  # #   path: charts/bookinfo
  # #   namespace: bookinfo

  # gloo-mgmt:
  #   repo: https://storage.googleapis.com/gloo-mesh-enterprise/gloo-mesh-enterprise
  #   chart: gloo-mesh-enterprise
  #   namespace: gloo-mesh
  #   # revision set by ./cluster-app-of-apps/templates/app.yaml

  # gloo-agent:
  #   repo: https://storage.googleapis.com/gloo-mesh-enterprise/gloo-mesh-agent
  #   chart: gloo-mesh-agent
  #   namespace: gloo-mesh
  #   # revision set by ./cluster-app-of-apps/templates/app.yaml
  #   syncPolicy:
  #     syncOptions: [] # dont create namespace
  #   values:
  #     cluster: cluster1
  #     relay:
  #       serverAddress: "10.0.20.10:9900"

  # register-cluster:
  #   path: charts/register-cluster
  #   namespace: gloo-mesh
  #   values:
  #     istio:
  #       clusterName: cluster1
  #   syncPolicy:
  #     syncOptions: [] # dont create namespace



  # istio-ingressgateway:
  #   repo: https://istio-release.storage.googleapis.com/charts
  #   chart: gateway
  #   namespace: istio-ingress
  #   # revision set by ./cluster-app-of-apps/templates/app.yaml
  #   values:
  #     # name and labels.revision are set from .Values.istio
  #     name: istio-ingressgateway
  #     labels:
  #       istio: ingressgateway
  #     service:
  #       type: LoadBalancer
  #       ports:
  #       # main http ingress port
  #       - port: 80
  #         targetPort: 8080
  #         name: http2
  #       # main https ingress port
  #       - port: 443
  #         targetPort: 8443
  #         name: https

  # workspace:
  #   path: charts/workspace
  #   namespace: gloo-mesh
  #   syncPolicy:
  #     syncOptions: [] # dont create namespace
  #   values:
  #     namespaces:
  #     - name: istio-ingress
  #     workspaces:
  #       gateway:
  #         namespace: istio-ingress
  #         spec:
  #           importFrom:
  #           - workspaces:
  #             - selector:
  #                 allow_ingress: "true"
  #             resources:
  #             - kind: SERVICE
  #             - kind: ALL
  #               labels:
  #                 expose: "true"
  #           exportTo:
  #           - workspaces:
  #             - selector:
  #                 allow_ingress: "true"
  #             resources:
  #             - kind: SERVICE

