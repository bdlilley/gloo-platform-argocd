
charts:
  core:
    wave: 10
    path: kustomize/1-core/base

  istio-base:
    wave: 20
    repo: https://istio-release.storage.googleapis.com/charts
    chart: base
    namespace: istio-system
    revision: "1.15.3"

  istiod:
    wave: 20
    repo: https://istio-release.storage.googleapis.com/charts
    chart: istiod
    revision: "1.15.3"
    namespace: istio-system
    syncPolicy:
      syncOptions: [] # dont create namespace
    globalValues:
      meshID: mesh1
      multiCluster:
        clusterName: mgmt
      network: network1
      hub: us-docker.pkg.dev/gloo-mesh/istio-1cf99a48c9d8
      tag: 1.15.3-solo
    values:
      revision: 1-15
      meshConfig:
        trustDomain: mgmt
        accessLogFile: /dev/stdout
        enableAutoMtls: true
        defaultConfig:
          envoyMetricsService:
            address: gloo-mesh-agent.gloo-mesh:9977
          envoyAccessLogService:
            address: gloo-mesh-agent.gloo-mesh:9977
          proxyMetadata:
            ISTIO_META_DNS_CAPTURE: "true"
            ISTIO_META_DNS_AUTO_ALLOCATE: "true"
            GLOO_MESH_CLUSTER_NAME: mgmt
      pilot:
        env:
          PILOT_ENABLE_K8S_SELECT_WORKLOAD_ENTRIES: "false"
          PILOT_SKIP_VALIDATE_TRUST_DOMAIN: "true"

  istio-ingressgateway:
    wave: 30
    repo: https://istio-release.storage.googleapis.com/charts
    chart: gateway
    namespace: istio-gateways
    revision: "1.15.3"
    syncPolicy:
      syncOptions: [] # dont create namespace
    values:
      revision: "1-15"
      labels:
        istio: ingressgateway
        istio.io/rev: 1-15
      annotations:
        proxy.istio.io/config: '{ "holdApplicationUntilProxyStarts": true }'
      service:
        type: LoadBalancer
        annotations:
          service.beta.kubernetes.io/aws-load-balancer-scheme: internal
          # this a bit idiotic - aws-load-balancer-type can only be nlb-ip or external
          # nlb-ip is only for backowards compatiblity, and it forces the controler to only
          # use IP-based TGBs; to use instance TGBs this must be "external" even though
          # the scheme is internal to force controller to look at aws-load-balancer-nlb-target-type
          service.beta.kubernetes.io/aws-load-balancer-type: external
          service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: instance
          service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
        ports:
        - port: 80
          targetPort: 80
          name: http2
        - port: 443
          targetPort: 8443
          name: https


  gloo-mesh-enterprise:
    wave: 40
    repo: https://storage.googleapis.com/gloo-mesh-enterprise/gloo-mesh-enterprise
    chart: gloo-mesh-enterprise
    revision: v2.2.3
    namespace: gloo-mesh
    syncPolicy:
      syncOptions: [] # dont create namespace
    globalValues:
      cluster: mgmt
    values:
      # assumes license was created by some other process (see README.md)
      licenseSecretName: gloo-mesh-license
      mgmtClusterName: mgmt
      glooMeshMgmtServer:
        serviceType: ClusterIP
      deploymentOverrides:
        spec:
          template:
            metadata:
              annotations:
                sidecar.istio.io/inject: "true"
              labels:
                istio.io/rev: "1-15"

  gloo-agent:
    wave: 40
    repo: https://storage.googleapis.com/gloo-mesh-enterprise/gloo-mesh-agent
    chart: gloo-mesh-agent
    revision: v2.2.3
    namespace: gloo-mesh
    syncPolicy:
      syncOptions: [] # dont create namespace
    values:
      cluster: mgmt
      glooMeshAgent:
        enabled: true
      ext-auth-service:
        enabled: false
      rate-limiter:
        enabled: false
      relay:
        serverAddress: "gloo-mesh-mgmt-server.gloo-mesh.svc.cluster.local:9900"
        authority: gloo-mesh-mgmt-server.gloo-mesh

  gm-core:
    path: kustomize/2-gm-core/base
    
  samples:
    path: kustomize/5-sample-apps/base