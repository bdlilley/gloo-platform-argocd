{{- $root := . }}
{{- $syncPolicy := dict  }}
{{- range $chartName, $chart := .Values.charts }}
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: {{ $chartName }}
  namespace: argocd
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: default
  source:
    {{- if ($chart).repo }}
    repoURL: {{ $chart.repo }}
    {{- else }}
    repoURL: https://github.com/bdlilley/gloo-platform-argocd.git
    {{- end }}
    {{- if ($chart).revision }}
    # branch for git-hosted, chart version for helm registry-hosted
    targetRevision: {{ $chart.revision }}
    {{- else }}
    {{- if and ($chart).repo (eq $chart.repo "https://istio-release.storage.googleapis.com/charts") }}
    targetRevision: {{ $root.Values.istioVersion }}
    {{- else if and ($chart).repo (hasPrefix "https://storage.googleapis.com/gloo-mesh-enterprise" $chart.repo) }}
    targetRevision: {{ $root.Values.glooVersion }}
    {{- end }}
    {{- end }}
    {{- if ($chart).path }}
    # only used for git-hosted charts
    path: {{ $chart.path }}
    {{- end }}
    {{- if ($chart).plugin }}
    plugin:
      name: {{ $chart.plugin }}
    {{- if not ($chart).path }}
    path: "."
    {{- end }}
    {{- end }}
    {{- if ($chart).chart }}
    # only used for registry-hosted charts
    chart: {{ $chart.chart }}
    {{- end }} #nd if chart.chart

{{- $theValues := dict }}
{{- if ($chart).values }}
{{- $theValues = deepCopy ($chart).values }}
{{- end }}

{{- if and ($chart).repo (eq $chart.repo "https://storage.googleapis.com/gloo-mesh-enterprise/gloo-mesh-enterprise") }}
{{- set $theValues "glooGatewayLicenseKey" $root.Values.glooGatewayLicenseKey }}
{{- set $theValues "glooMeshLicenseKey" $root.Values.glooMeshLicenseKey }}
{{- end }} # end if chart has repo field

{{- if and ($chart).repo ($chart).chart (eq $chart.repo "https://istio-release.storage.googleapis.com/charts") (or (eq $chart.chart "gateway") (eq $chart.chart "istiod") ) }}
{{- set $theValues "labels" (merge $chart.values.labels (dict "revision" $root.Values.istioVersionLabel )) }}
{{- set $theValues "global" (dict "hub" $root.Values.istioRepo "tag" $root.Values.istioTag) }}
{{- end }} # end if chart has repo field

{{- if and ($chart).path (eq $chart.path "charts/bookinfo") }}
{{- set $theValues "revision" $root.Values.istioVersion }}
{{- end }} # end if chart has repo field

{{- if and (not ($chart).plugin) $theValues }}
    helm:
      values: |
{{ toYaml $theValues | indent 8 }}
{{- end }} #end if chart.values



  destination:
    server: https://kubernetes.default.svc
    namespace: {{ $chart.namespace }}
  syncPolicy:  {{ include "app.syncPolicy" $chart }}
{{- end }} 